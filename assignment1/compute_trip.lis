     1                                  ; Author: Kelsey Dang
     2                                  ; Email: kdangdo2002@csu.fullerton.edu
     3                                  ; Due Date: 10/4/23
     4                                  ; Subject: CPSC 240-03 Assignment 1 Las Vegas Problem
     5                                  ; Filename: compute_trip.asm
     6                                  
     7                                  global las_vegas
     8                                  extern printf
     9                                  extern scanf
    10                                  
    11                                  section .data
    12                                    ; Constants
    13 00000000 506C6561736520656E-       initial_msg db "Please enter the speed for the initial segment of the trip (mph): ", 0
    13 00000009 746572207468652073-
    13 00000012 7065656420666F7220-
    13 0000001B 74686520696E697469-
    13 00000024 616C207365676D656E-
    13 0000002D 74206F662074686520-
    13 00000036 7472697020286D7068-
    13 0000003F 293A2000           
    14                                    initial_msg_len equ $-initial_msg
    15                                  
    16 00000043 496E697469616C2065-       initial_output db "Initial entered: %1.18lf", 10, 0
    16 0000004C 6E74657265643A2025-
    16 00000055 312E31386C660A00   
    17                                    initial_output_len equ $-initial_output
    18                                  
    19 0000005D 466F7220686F77206D-       miles_msg db "For how many miles will you maintain this average speed: ", 0
    19 00000066 616E79206D696C6573-
    19 0000006F 2077696C6C20796F75-
    19 00000078 206D61696E7461696E-
    19 00000081 207468697320617665-
    19 0000008A 726167652073706565-
    19 00000093 643A2000           
    20                                    miles_msg_len equ $-miles_msg
    21                                  
    22 00000097 4D696C6573206D6169-       miles_output db "Miles maintained entered: ", 10, 0
    22 000000A0 6E7461696E65642065-
    22 000000A9 6E74657265643A200A-
    22 000000B2 00                 
    23                                    miles_output_len equ $-miles_output
    24                                  
    25 000000B3 576861742077696C6C-       final_seg_msg db "What will be your speed during the final segment of the trip (mph): ", 0
    25 000000BC 20626520796F757220-
    25 000000C5 737065656420647572-
    25 000000CE 696E67207468652066-
    25 000000D7 696E616C207365676D-
    25 000000E0 656E74206F66207468-
    25 000000E9 65207472697020286D-
    25 000000F2 7068293A2000       
    26                                    final_seg_msg_len equ $-final_seg_msg
    27                                  
    28 000000F8 46696E616C20737065-       final_output db "Final speed entered: ", 10, 0
    28 00000101 656420656E74657265-
    28 0000010A 643A200A00         
    29                                    final_output_len equ $-final_output
    30                                  
    31 0000010F 596F75722061766572-       avg_speed_msg db "Your average speed will be %1.18lf mph.", 10, 0
    31 00000118 616765207370656564-
    31 00000121 2077696C6C20626520-
    31 0000012A 25312E31386C66206D-
    31 00000133 70682E0A00         
    32                                    avg_speed_msg_len equ $-avg_speed_msg
    33                                  
    34 00000138 54686520746F74616C-       total_msg db "The total travel time will be %1.18lf hours.", 10, 0
    34 00000141 2074726176656C2074-
    34 0000014A 696D652077696C6C20-
    34 00000153 62652025312E31386C-
    34 0000015C 6620686F7572732E0A-
    34 00000165 00                 
    35                                    total_msg_len equ $-total_msg
    36                                  
    37 00000166 256C6600                  floatform db "%lf", 0
    38 0000016A 257300                    stringform db "%s", 0
    39 0000016D 0000000000B06F40          hotel_distance dq 253.5
    40                                  
    41                                  section .bss
    42                                    align 64
    43 00000000 <res 00000340>            backuparea resb 832
    44                                  
    45                                  section .text
    46                                  las_vegas:                ; start here
    47                                  
    48                                    ; Backup GPRs
    49 00000000 55                        push rbp
    50 00000001 4889E5                    mov rbp, rsp
    51 00000004 53                        push rbx
    52 00000005 51                        push rcx
    53 00000006 52                        push rdx
    54 00000007 56                        push rsi
    55 00000008 57                        push rdi
    56 00000009 4150                      push r8
    57 0000000B 4151                      push r9
    58 0000000D 4152                      push r10
    59 0000000F 4153                      push r11
    60 00000011 4154                      push r12
    61 00000013 4155                      push r13
    62 00000015 4156                      push r14
    63 00000017 4157                      push r15
    64 00000019 9C                        pushf
    65                                  
    66                                    ; Prompt for input of initial distance
    67 0000001A 6A00                      push qword 0            ; push to top of stack
    68 0000001C B800000000                mov qword rax, 0
    69 00000021 48BF-                     mov rdi, stringform     ; "%s"
    69 00000023 [6A01000000000000] 
    70 0000002B 48BE-                     mov rsi, initial_msg
    70 0000002D [0000000000000000] 
    71 00000035 E8(00000000)              call printf
    72                                    ; End of block
    73                                  
    74                                    ; Get initial from user
    75 0000003A 6A00                      push qword 0            ; push to top of stack
    76 0000003C B800000000                mov qword rax, 0
    77 00000041 48BF-                     mov rdi, floatform      ; "%lf"
    77 00000043 [6601000000000000] 
    78 0000004B 4889E6                    mov rsi, rsp
    79 0000004E E8(00000000)              call scanf
    80 00000053 F2440F100424              movsd xmm8, [rsp]       ; dereference rsp and copy to xmm8
    81 00000059 58                        pop rax                 ; restore stack
    82                                    ; End of block
    83                                  
    84                                    ; Print initial from user
    85 0000005A B800000000                mov rax, 0
    86 0000005F 48BE-                     mov rsi, initial_output
    86 00000061 [4300000000000000] 
    87 00000069 E8(00000000)              call printf
    88                                    ; End of block
    89                                  
    90                                    ; Prompt for input of miles maintained
    91 0000006E B800000000                mov qword rax, 0
    92 00000073 48BF-                     mov rdi, stringform     ; "%s"
    92 00000075 [6A01000000000000] 
    93 0000007D 48BE-                     mov rsi, miles_msg
    93 0000007F [5D00000000000000] 
    94 00000087 E8(00000000)              call printf
    95                                    ; End of block
    96                                    ;
    97                                    ; Get miles from user
    98 0000008C 6A00                      push qword 0
    99 0000008E B800000000                mov qword rax, 0
   100 00000093 48BF-                     mov rdi, floatform
   100 00000095 [6601000000000000] 
   101 0000009D 4889E6                    mov rsi, rsp
   102 000000A0 E8(00000000)              call scanf
   103 000000A5 F2440F100C24              movsd xmm9, [rsp]
   104 000000AB 58                        pop rax
   105                                    ; End of block
   106                                  
   107                                    ; Print miles from user
   108 000000AC B800000000                mov rax, 0
   109 000000B1 48BE-                     mov rsi, miles_output
   109 000000B3 [9700000000000000] 
   110 000000BB E8(00000000)              call printf
   111                                    ; End of block
   112                                  
   113                                    ; Prompt for input of final speed
   114 000000C0 B800000000                mov qword rax, 0
   115 000000C5 48BF-                     mov rdi, stringform     ; "%s"
   115 000000C7 [6A01000000000000] 
   116 000000CF 48BE-                     mov rsi, final_seg_msg
   116 000000D1 [B300000000000000] 
   117 000000D9 E8(00000000)              call printf
   118                                    ; End of block
   119                                  
   120                                    ; Get final_seg from user
   121 000000DE 6A00                      push qword 0
   122 000000E0 B800000000                mov qword rax, 0
   123 000000E5 48BF-                     mov rdi, floatform
   123 000000E7 [6601000000000000] 
   124 000000EF 4889E6                    mov rsi, rsp
   125 000000F2 E8(00000000)              call scanf
   126 000000F7 F2440F101424              movsd xmm10, [rsp]
   127 000000FD 58                        pop rax
   128                                    ; End of block
   129                                  
   130                                    ; Print final_seg from user
   131 000000FE B800000000                mov rax, 0
   132 00000103 48BE-                     mov rsi, final_output
   132 00000105 [F800000000000000] 
   133 0000010D E8(00000000)              call printf
   134                                    ; End of block
   135                                  
   136                                    ; Block to copy 253.5 into xmm11
   137                                    ; movsd xmm11, qword [hotel_distance]
   138                                  
   139                                    ; Output avg_speed_msg
   140 00000112 B800000000                mov rax, 0
   141 00000117 48BF-                     mov rdi, avg_speed_msg
   141 00000119 [0F01000000000000] 
   142 00000121 E8(00000000)              call printf
   143                                    ; End of block
   144                                  
   145                                    ; Output total travel time
   146 00000126 B800000000                mov rax, 0
   147 0000012B 48BF-                     mov rdi, total_msg
   147 0000012D [3801000000000000] 
   148 00000135 E8(00000000)              call printf
   149                                    ; End of block
   150                                  
   151                                    ; Block to set return value
   152                                  setreturnvalue:
   153 0000013A 4156                      push r14
   154 0000013C F20F100424                movsd xmm0, [rsp]
   155 00000141 415E                      pop r14
   156                                  
   157                                    ; Restore GPRs
   158 00000143 9D                        popf
   159 00000144 415F                      pop r15
   160 00000146 415E                      pop r14
   161 00000148 415D                      pop r13
   162 0000014A 415C                      pop r12
   163 0000014C 415B                      pop r11
   164 0000014E 415A                      pop r10
   165 00000150 4159                      pop r9
   166 00000152 4158                      pop r8
   167 00000154 5F                        pop rdi
   168 00000155 5E                        pop rsi
   169 00000156 5A                        pop rdx
   170 00000157 59                        pop rcx
   171 00000158 5B                        pop rbx
   172 00000159 5D                        pop rbp
   173                                  
   174 0000015A C3                        ret
