     1                                  ; Author: Kelsey Dang
     2                                  ; Email: kdangdo2002@csu.fullerton.edu
     3                                  ; Due Date: 10/4/23
     4                                  ; Subject: CPSC 240-03 Assignment 1 Las Vegas Problem
     5                                  ; Filename: compute_trip.asm
     6                                  
     7                                  global las_vegas
     8                                  extern printf
     9                                  extern scanf
    10                                  
    11                                  section .data
    12                                    ; Constants
    13 00000000 506C6561736520656E-       initial_msg db "Please enter the speed for the initial segment of the trip (mph): ", 0
    13 00000009 746572207468652073-
    13 00000012 7065656420666F7220-
    13 0000001B 74686520696E697469-
    13 00000024 616C207365676D656E-
    13 0000002D 74206F662074686520-
    13 00000036 7472697020286D7068-
    13 0000003F 293A2000           
    14                                    initial_msg_len equ $-initial_msg
    15                                  
    16 00000043 496E697469616C2065-       initial_output db "Initial entered: %1.18lf", 10, 0
    16 0000004C 6E74657265643A2025-
    16 00000055 312E31386C660A00   
    17                                    initial_output_len equ $-initial_output
    18                                  
    19 0000005D 466F7220686F77206D-       miles_msg db "For how many miles will you maintain this average speed: ", 0
    19 00000066 616E79206D696C6573-
    19 0000006F 2077696C6C20796F75-
    19 00000078 206D61696E7461696E-
    19 00000081 207468697320617665-
    19 0000008A 726167652073706565-
    19 00000093 643A2000           
    20                                    miles_msg_len equ $-miles_msg
    21                                  
    22 00000097 4D696C6573206D6169-       miles_output db "Miles maintained entered: ", 10, 0
    22 000000A0 6E7461696E65642065-
    22 000000A9 6E74657265643A200A-
    22 000000B2 00                 
    23                                    miles_output_len equ $-miles_output
    24                                  
    25 000000B3 576861742077696C6C-       final_seg_msg db "What will be your speed during the final segment of the trip (mph): ", 0
    25 000000BC 20626520796F757220-
    25 000000C5 737065656420647572-
    25 000000CE 696E67207468652066-
    25 000000D7 696E616C207365676D-
    25 000000E0 656E74206F66207468-
    25 000000E9 65207472697020286D-
    25 000000F2 7068293A2000       
    26                                    final_seg_msg_len equ $-final_seg_msg
    27                                  
    28 000000F8 46696E616C20737065-       final_output db "Final speed entered: ", 10, 0
    28 00000101 656420656E74657265-
    28 0000010A 643A200A00         
    29                                    final_output_len equ $-final_output
    30                                  
    31 0000010F 596F75722061766572-       avg_speed_msg db "Your average speed will be %1.18lf mph.", 10, 0
    31 00000118 616765207370656564-
    31 00000121 2077696C6C20626520-
    31 0000012A 25312E31386C66206D-
    31 00000133 70682E0A00         
    32                                    avg_speed_msg_len equ $-avg_speed_msg
    33                                  
    34 00000138 54686520746F74616C-       total_msg db "The total travel time will be %1.18lf hours.", 10, 0
    34 00000141 2074726176656C2074-
    34 0000014A 696D652077696C6C20-
    34 00000153 62652025312E31386C-
    34 0000015C 6620686F7572732E0A-
    34 00000165 00                 
    35                                    total_msg_len equ $-total_msg
    36                                  
    37 00000166 256C6600                  floatform db "%lf", 0
    38 0000016A 257300                    stringform db "%s", 0
    39 0000016D 0000000000B06F40          hotel_distance dq 253.5
    40 00000175 0000000000000840          three dq 3.0
    41                                  
    42                                  section .bss
    43                                    align 64
    44 00000000 <res 00000340>            backuparea resb 832
    45                                  
    46                                  section .text
    47                                  las_vegas:                ; start here
    48                                  
    49                                    ; Backup GPRs
    50 00000000 55                        push rbp
    51 00000001 4889E5                    mov rbp, rsp
    52 00000004 53                        push rbx
    53 00000005 51                        push rcx
    54 00000006 52                        push rdx
    55 00000007 56                        push rsi
    56 00000008 57                        push rdi
    57 00000009 4150                      push r8
    58 0000000B 4151                      push r9
    59 0000000D 4152                      push r10
    60 0000000F 4153                      push r11
    61 00000011 4154                      push r12
    62 00000013 4155                      push r13
    63 00000015 4156                      push r14
    64 00000017 4157                      push r15
    65 00000019 9C                        pushf
    66                                  
    67                                    ; Prompt for input of initial distance
    68 0000001A 6A00                      push qword 0            ; push to top of stack
    69 0000001C B800000000                mov qword rax, 0
    70 00000021 48BF-                     mov rdi, stringform     ; "%s"
    70 00000023 [6A01000000000000] 
    71 0000002B 48BE-                     mov rsi, initial_msg
    71 0000002D [0000000000000000] 
    72 00000035 E8(00000000)              call printf
    73                                    ; End of block
    74                                  
    75                                    ; Get initial from user
    76 0000003A 6A00                      push qword 0            ; push to top of stack
    77 0000003C B800000000                mov qword rax, 0
    78 00000041 48BF-                     mov rdi, floatform      ; "%lf"
    78 00000043 [6601000000000000] 
    79 0000004B 4889E6                    mov rsi, rsp
    80 0000004E E8(00000000)              call scanf
    81 00000053 F2440F100424              movsd xmm8, [rsp]       ; dereference rsp and copy to xmm8
    82 00000059 58                        pop rax                 ; restore stack
    83                                    ; End of block
    84                                  
    85                                    ; ; Print initial from user
    86                                    ; mov rax, 0
    87                                    ; mov rsi, initial_output
    88                                    ; call printf
    89                                    ; ; End of block
    90                                    ;
    91                                    ; Prompt for input of miles maintained
    92 0000005A B800000000                mov qword rax, 0
    93 0000005F 48BF-                     mov rdi, stringform     ; "%s"
    93 00000061 [6A01000000000000] 
    94 00000069 48BE-                     mov rsi, miles_msg
    94 0000006B [5D00000000000000] 
    95 00000073 E8(00000000)              call printf
    96                                    ; End of block
    97                                    ;
    98                                    ; Get miles from user
    99 00000078 6A00                      push qword 0
   100 0000007A B800000000                mov qword rax, 0
   101 0000007F 48BF-                     mov rdi, floatform
   101 00000081 [6601000000000000] 
   102 00000089 4889E6                    mov rsi, rsp
   103 0000008C E8(00000000)              call scanf
   104 00000091 F2440F100C24              movsd xmm9, [rsp]
   105 00000097 58                        pop rax
   106                                    ; End of block
   107                                    ;
   108                                    ; ; Print miles from user
   109                                    ; mov rax, 0
   110                                    ; mov rsi, miles_output
   111                                    ; call printf
   112                                    ; ; End of block
   113                                    ;
   114                                    ; Prompt for input of final speed
   115 00000098 B800000000                mov qword rax, 0
   116 0000009D 48BF-                     mov rdi, stringform     ; "%s"
   116 0000009F [6A01000000000000] 
   117 000000A7 48BE-                     mov rsi, final_seg_msg
   117 000000A9 [B300000000000000] 
   118 000000B1 E8(00000000)              call printf
   119                                    ; End of block
   120                                  
   121                                    ; Get final_seg from user
   122 000000B6 6A00                      push qword 0
   123 000000B8 B800000000                mov qword rax, 0
   124 000000BD 48BF-                     mov rdi, floatform
   124 000000BF [6601000000000000] 
   125 000000C7 4889E6                    mov rsi, rsp
   126 000000CA E8(00000000)              call scanf
   127 000000CF F2440F101424              movsd xmm10, [rsp]
   128 000000D5 58                        pop rax
   129                                    ; End of block
   130                                    ;
   131                                    ; ; Print final_seg from user
   132                                    ; mov rax, 0
   133                                    ; mov rsi, final_output
   134                                    ; call printf
   135                                    ; ; End of block
   136                                    ;
   137                                    ; ; Block to copy 253.5 into xmm1 and 3.0 into xmm2
   138                                    ; movsd xmm1, qword [hotel_distance]
   139                                    ; movsd xmm2, qword [three]
   140                                    ;
   141                                    ; ; Output avg_speed_msg
   142                                    ; mov rax, 0
   143                                    ; mov rdi, avg_speed_msg
   144                                    ; call printf
   145                                    ; ; End of block
   146                                    ;
   147                                    ; ; Output total travel time
   148                                    ; mov rax, 0
   149                                    ; mov rdi, total_msg
   150                                    ; call printf
   151                                    ; ; End of block
   152                                  
   153                                    ; Block to set return value
   154                                  setreturnvalue:
   155 000000D6 4156                      push r14
   156 000000D8 F20F100424                movsd xmm0, [rsp]
   157 000000DD 415E                      pop r14
   158                                  
   159                                    ; Restore GPRs
   160 000000DF 9D                        popf
   161 000000E0 415F                      pop r15
   162 000000E2 415E                      pop r14
   163 000000E4 415D                      pop r13
   164 000000E6 415C                      pop r12
   165 000000E8 415B                      pop r11
   166 000000EA 415A                      pop r10
   167 000000EC 4159                      pop r9
   168 000000EE 4158                      pop r8
   169 000000F0 5F                        pop rdi
   170 000000F1 5E                        pop rsi
   171 000000F2 5A                        pop rdx
   172 000000F3 59                        pop rcx
   173 000000F4 5B                        pop rbx
   174 000000F5 5D                        pop rbp
   175                                  
   176 000000F6 C3                        ret
