     1                                  ; Program Name: ---
     2                                  ; Subject: CPSC 240-03 Assignment 3 <--->
     3                                  ; This program demonstrates passing an array to a called subprogram and sorting it.
     4                                  
     5                                  ; Copyright (C) 2023 Kelsey Dang
     6                                  
     7                                  ; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
     8                                  ; License version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it
     9                                  ; will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
    10                                  ; PARTICULAR PURPOSE.  See the GNU General Public License for more details.  A copy of the GNU General Public
    11                                  ; License v3 is available here:  <https://www.gnu.org/licenses/>.
    12                                  
    13                                  ; Author Information
    14                                  ;   Author: Kelsey Dang
    15                                  ;   Email: kdangdo2002@csu.fullerton.edu
    16                                  ;
    17                                  ; Program Information
    18                                  ;   Program Name: ---
    19                                  ;   Program Languages: ---
    20                                  ;   Due Date: 10/25/23
    21                                  ;   Operating System: Tuffix VM on Windows 10 computer
    22                                  
    23                                  ; Purpose
    24                                  ;   This is the director file calls input_array.asm, output_array.c, sortpointers.c in Sort by Pointers.
    25                                  ;   This file gets called by main.cpp.
    26                                  
    27                                  ; File Information
    28                                  ;   Filename: ---
    29                                  ;   Language: x86-64 assembly
    30                                  ;   Compile: nasm -f elf64 -l director.lis -o director.o director.asm
    31                                  ;   Link: g++ -m64 -fno-pie -no-pie -std=c++17 -o a.out main.o director.o input_array.o output_array.o sortpointers.o
    32                                  
    33                                  global manager
    34                                  extern printf
    35                                  
    36                                  segment .data
    37 00000000 6D616E616765723A20-     test_msg db "manager: World!", 10, 0
    37 00000009 576F726C64210A00   
    38                                  
    39 00000011 256C6600                floatform db "%lf", 0
    40 00000015 257300                  stringform db "%s", 0
    41                                  
    42                                  segment .bss
    43                                  
    44                                  segment .text
    45                                  manager:
    46                                  
    47                                  ; ============= Backup GPRs ============================
    48 00000000 55                      push rbp
    49 00000001 4889E5                  mov rbp, rsp
    50 00000004 53                      push rbx
    51 00000005 51                      push rcx
    52 00000006 52                      push rdx
    53 00000007 56                      push rsi
    54 00000008 57                      push rdi
    55 00000009 4150                    push r8
    56 0000000B 4151                    push r9
    57 0000000D 4152                    push r10
    58 0000000F 4153                    push r11
    59 00000011 4154                    push r12
    60 00000013 4155                    push r13
    61 00000015 4156                    push r14
    62 00000017 4157                    push r15
    63 00000019 9C                      pushf
    64                                  
    65                                  ; Block
    66 0000001A B800000000              mov rax, 0
    67 0000001F 48BF-                   mov rdi, stringform
    67 00000021 [1500000000000000] 
    68 00000029 48BE-                   mov rsi, test_msg
    68 0000002B [0000000000000000] 
    69 00000033 E8(00000000)            call printf
    70                                  
    71                                  ; =============== Restore GPRs ==========================
    72 00000038 9D                      popf
    73 00000039 415F                    pop r15
    74 0000003B 415E                    pop r14
    75 0000003D 415D                    pop r13
    76 0000003F 415C                    pop r12
    77 00000041 415B                    pop r11
    78 00000043 415A                    pop r10
    79 00000045 4159                    pop r9
    80 00000047 4158                    pop r8
    81 00000049 5F                      pop rdi
    82 0000004A 5E                      pop rsi
    83 0000004B 5A                      pop rdx
    84 0000004C 59                      pop rcx
    85 0000004D 5B                      pop rbx
    86 0000004E 5D                      pop rbp
    87                                  
    88                                  ; =============== Sendback to main ======================
    89                                  ; mov rax, sendback
    90                                  
    91 0000004F C3                      ret
