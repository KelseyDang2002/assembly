     1                                  ; Program Name: ---
     2                                  ; Subject: CPSC 240-03 <Midterm>
     3                                  ; This program demonstrates passing an array to a called subprogram and sorting it.
     4                                  
     5                                  ; Copyright (C) 2023 Kelsey Dang
     6                                  
     7                                  ; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
     8                                  ; License version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it
     9                                  ; will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
    10                                  ; PARTICULAR PURPOSE.  See the GNU General Public License for more details.  A copy of the GNU General Public
    11                                  ; License v3 is available here:  <https://www.gnu.org/licenses/>.
    12                                  
    13                                  ; Author Information
    14                                  ;   Author: Kelsey Dang
    15                                  ;   Email: kdangdo2002@csu.fullerton.edu
    16                                  ;
    17                                  ; Program Information
    18                                  ;   Program Name: ---
    19                                  ;   Program Languages: ---
    20                                  ;   Due Date: 10/25/23
    21                                  ;   Operating System: Tuffix VM on Windows 10 computer
    22                                  
    23                                  ; Purpose
    24                                  ;   This is the director file calls input_array.asm, output_array.c, sortpointers.c in Sort by Pointers.
    25                                  ;   This file gets called by main.cpp.
    26                                  
    27                                  ; File Information
    28                                  ;   Filename: ---
    29                                  ;   Language: x86-64 assembly
    30                                  ;   Compile: nasm -f elf64 -l director.lis -o director.o director.asm
    31                                  ;   Link: g++ -m64 -fno-pie -no-pie -std=c++17 -o a.out main.o director.o input_array.o output_array.o sortpointers.o
    32                                  
    33                                  extern sum_array
    34                                  extern printf
    35                                  
    36                                  segment .data
    37 00000000 256C6600                floatform db "%lf", 0
    38 00000004 257300                  stringform db "%s", 0
    39                                  
    40                                  segment .bss
    41                                  align 64
    42 00000000 <res 00000340>          backuparea resb 832
    43                                  
    44                                  segment .text
    45                                  sum_array:
    46                                  
    47                                  ; ============= Backup GPRs ============================
    48 00000000 55                      push rbp
    49 00000001 4889E5                  mov rbp, rsp
    50 00000004 53                      push rbx
    51 00000005 51                      push rcx
    52 00000006 52                      push rdx
    53 00000007 56                      push rsi
    54 00000008 57                      push rdi
    55 00000009 4150                    push r8
    56 0000000B 4151                    push r9
    57 0000000D 4152                    push r10
    58 0000000F 4153                    push r11
    59 00000011 4154                    push r12
    60 00000013 4155                    push r13
    61 00000015 4156                    push r14
    62 00000017 4157                    push r15
    63 00000019 9C                      pushf
    64                                  
    65                                  ; Backup r14 and r15
    66 0000001A 4989FE                  mov r14, rdi
    67 0000001D 4989F7                  mov r15, rsi
    68 00000020 41BD00000000            mov r13, 0
    69                                  
    70                                  ; Sum of elements in array
    71 00000026 4D31ED                  xor r13, r13
    72                                  
    73                                  beginloop:
    74 00000029 4D39FD                  cmp r13, r15
    75 0000002C 740B                    je endloop
    76                                  
    77 0000002E F2470F583CEE            addsd xmm15, [r14+8*r13]
    78                                  
    79 00000034 49FFC5                  inc r13
    80 00000037 EBF0                    jmp beginloop
    81                                  
    82                                  endloop:
    83 00000039 F2410F10C7              movsd xmm0, xmm15
    84                                  
    85                                  ; =============== Restore GPRs ==========================
    86 0000003E 9D                      popf
    87 0000003F 415F                    pop r15
    88 00000041 415E                    pop r14
    89 00000043 415D                    pop r13
    90 00000045 415C                    pop r12
    91 00000047 415B                    pop r11
    92 00000049 415A                    pop r10
    93 0000004B 4159                    pop r9
    94 0000004D 4158                    pop r8
    95 0000004F 5F                      pop rdi
    96 00000050 5E                      pop rsi
    97 00000051 5A                      pop rdx
    98 00000052 59                      pop rcx
    99 00000053 5B                      pop rbx
   100 00000054 5D                      pop rbp
   101                                  
   102 00000055 C3                      ret
