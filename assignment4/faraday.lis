     1                                  ; Program Name: ---
     2                                  ; Subject: CPSC 240-03 <Midterm>
     3                                  ; This program demonstrates passing an array to a called subprogram and sorting it.
     4                                  
     5                                  ; Copyright (C) 2023 Kelsey Dang
     6                                  
     7                                  ; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
     8                                  ; License version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it
     9                                  ; will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
    10                                  ; PARTICULAR PURPOSE.  See the GNU General Public License for more details.  A copy of the GNU General Public
    11                                  ; License v3 is available here:  <https://www.gnu.org/licenses/>.
    12                                  
    13                                  ; Author Information
    14                                  ;   Author: Kelsey Dang
    15                                  ;   Email: kdangdo2002@csu.fullerton.edu
    16                                  ;
    17                                  ; Program Information
    18                                  ;   Program Name: ---
    19                                  ;   Program Languages: ---
    20                                  ;   Due Date: 11/12/23
    21                                  ;   Operating System: Tuffix VM on Windows 10 computer
    22                                  
    23                                  ; Purpose
    24                                  ;   This is the director file calls input_array.asm, output_array.c, sortpointers.c in Sort by Pointers.
    25                                  ;   This file gets called by main.cpp.
    26                                  
    27                                  ; File Information
    28                                  ;   Filename: ---
    29                                  ;   Language: x86-64 assembly
    30                                  ;   Compile: nasm -f elf64 -l director.lis -o director.o director.asm
    31                                  ;   Link: g++ -m64 -fno-pie -no-pie -std=c++17 -o a.out main.o director.o input_array.o output_array.o sortpointers.o
    32                                  
    33                                  extern faraday
    34                                  extern printf
    35                                  
    36                                  segment .data
    37 00000000 666172616461793A20-     prompt_name db "faraday: Please enter your name: ", 0
    37 00000009 506C6561736520656E-
    37 00000012 74657220796F757220-
    37 0000001B 6E616D653A2000     
    38 00000022 0A666172616461793A-     prompt_title db 10, "faraday: Please enter your title or profession: ", 0
    38 0000002B 20506C656173652065-
    38 00000034 6E74657220796F7572-
    38 0000003D 207469746C65206F72-
    38 00000046 2070726F6665737369-
    38 0000004F 6F6E3A2000         
    39                                  
    40 00000054 0A666172616461793A-     welcome_msg db 10, "faraday: We always welcome a %s to our electrical lab.", 10, 0
    40 0000005D 20576520616C776179-
    40 00000066 732077656C636F6D65-
    40 0000006F 206120257320746F20-
    40 00000078 6F757220656C656374-
    40 00000081 726963616C206C6162-
    40 0000008A 2E0A00             
    41                                  
    42 0000008D 0A666172616461793A-     prompt_volts db 10, "faraday: Please enter the voltage of the electrical system at your site (volts): ", 0
    42 00000096 20506C656173652065-
    42 0000009F 6E7465722074686520-
    42 000000A8 766F6C74616765206F-
    42 000000B1 662074686520656C65-
    42 000000BA 6374726963616C2073-
    42 000000C3 797374656D20617420-
    42 000000CC 796F75722073697465-
    42 000000D5 2028766F6C7473293A-
    42 000000DE 2000               
    43 000000E0 0A666172616461793A-     prompt_ohms db 10, "faraday: Please enter the electrical resistence in the system at your site (ohms): ", 0
    43 000000E9 20506C656173652065-
    43 000000F2 6E7465722074686520-
    43 000000FB 656C65637472696361-
    43 00000104 6C2072657369737465-
    43 0000010D 6E636520696E207468-
    43 00000116 652073797374656D20-
    43 0000011F 617420796F75722073-
    43 00000128 69746520286F686D73-
    43 00000131 293A2000           
    44 00000135 0A666172616461793A-     prompt_seconds db 10, "faraday: Please enter the time your system was operating (seconds): ", 0
    44 0000013E 20506C656173652065-
    44 00000147 6E7465722074686520-
    44 00000150 74696D6520796F7572-
    44 00000159 2073797374656D2077-
    44 00000162 6173206F7065726174-
    44 0000016B 696E6720287365636F-
    44 00000174 6E6473293A2000     
    45                                  
    46 0000017B 0A0A66617261646179-     thankyou_msg_1 db 10, 10, "faraday: Thank you %s. ", 0
    46 00000184 3A205468616E6B2079-
    46 0000018D 6F752025732E2000   
    47 00000195 5765206174204D616A-     thankyou_msg_2 db "We at Majestic are pleased to inform you that your system performed %lf joules of work.", 10, 0
    47 0000019E 657374696320617265-
    47 000001A7 20706C656173656420-
    47 000001B0 746F20696E666F726D-
    47 000001B9 20796F752074686174-
    47 000001C2 20796F757220737973-
    47 000001CB 74656D20706572666F-
    47 000001D4 726D656420256C6620-
    47 000001DD 6A6F756C6573206F66-
    47 000001E6 20776F726B2E0A00   
    48                                  
    49 000001EE 0A666172616461793A-     congrats_msg_1 db 10, "faraday: Congratulations %s. Come back any time and make use of our software.", 10, 0
    49 000001F7 20436F6E6772617475-
    49 00000200 6C6174696F6E732025-
    49 00000209 732E20436F6D652062-
    49 00000212 61636B20616E792074-
    49 0000021B 696D6520616E64206D-
    49 00000224 616B6520757365206F-
    49 0000022D 66206F757220736F66-
    49 00000236 74776172652E0A00   
    50 0000023E 45766572796F6E6520-     congrats_msg_2 db "Everyone with title %s is welcome to use our programs at a reduced price.", 10, 0
    50 00000247 77697468207469746C-
    50 00000250 652025732069732077-
    50 00000259 656C636F6D6520746F-
    50 00000262 20757365206F757220-
    50 0000026B 70726F6772616D7320-
    50 00000274 617420612072656475-
    50 0000027D 636564207072696365-
    50 00000286 2E0A00             
    51                                  
    52 00000289 256C6600                floatform db "%lf", 0
    53 0000028D 257300                  stringform db "%s", 0
    54                                  
    55                                  segment .bss
    56                                  
    57                                  segment .text
    58                                  faraday:
    59                                  
    60                                  ; ============= Backup GPRs ============================
    61 00000000 55                      push rbp
    62 00000001 4889E5                  mov rbp, rsp
    63 00000004 53                      push rbx
    64 00000005 51                      push rcx
    65 00000006 52                      push rdx
    66 00000007 56                      push rsi
    67 00000008 57                      push rdi
    68 00000009 4150                    push r8
    69 0000000B 4151                    push r9
    70 0000000D 4152                    push r10
    71 0000000F 4153                    push r11
    72 00000011 4154                    push r12
    73 00000013 4155                    push r13
    74 00000015 4156                    push r14
    75 00000017 4157                    push r15
    76 00000019 9C                      pushf
    77                                  
    78                                  ; =============== Print prompt_name =====================
    79 0000001A B800000000              mov rax, 0
    80 0000001F 48BF-                   mov rdi, stringform
    80 00000021 [8D02000000000000] 
    81 00000029 48BE-                   mov rsi, prompt_name
    81 0000002B [0000000000000000] 
    82 00000033 E8(00000000)            call printf
    83                                  
    84                                  ; =============== Print prompt_title ====================
    85 00000038 B800000000              mov rax, 0
    86 0000003D 48BF-                   mov rdi, stringform
    86 0000003F [8D02000000000000] 
    87 00000047 48BE-                   mov rsi, prompt_title
    87 00000049 [2200000000000000] 
    88 00000051 E8(00000000)            call printf
    89                                  
    90                                  ; =============== Print welcome_msg =====================
    91 00000056 B800000000              mov rax, 0
    92 0000005B 48BF-                   mov rdi, stringform
    92 0000005D [8D02000000000000] 
    93 00000065 48BE-                   mov rsi, welcome_msg
    93 00000067 [5400000000000000] 
    94 0000006F E8(00000000)            call printf
    95                                  
    96                                  ; =============== Print prompt_volts ====================
    97 00000074 B800000000              mov rax, 0
    98 00000079 48BF-                   mov rdi, stringform
    98 0000007B [8D02000000000000] 
    99 00000083 48BE-                   mov rsi, prompt_volts
    99 00000085 [8D00000000000000] 
   100 0000008D E8(00000000)            call printf
   101                                  
   102                                  ; =============== Print prompt_ohms =====================
   103 00000092 B800000000              mov rax, 0
   104 00000097 48BF-                   mov rdi, stringform
   104 00000099 [8D02000000000000] 
   105 000000A1 48BE-                   mov rsi, prompt_ohms
   105 000000A3 [E000000000000000] 
   106 000000AB E8(00000000)            call printf
   107                                  
   108                                  ; =============== Print prompt_seconds ==================
   109 000000B0 B800000000              mov rax, 0
   110 000000B5 48BF-                   mov rdi, stringform
   110 000000B7 [8D02000000000000] 
   111 000000BF 48BE-                   mov rsi, prompt_seconds
   111 000000C1 [3501000000000000] 
   112 000000C9 E8(00000000)            call printf
   113                                  
   114                                  ; =============== Print thankyou_msg_1 ==================
   115 000000CE B800000000              mov rax, 0
   116 000000D3 48BF-                   mov rdi, stringform
   116 000000D5 [8D02000000000000] 
   117 000000DD 48BE-                   mov rsi, thankyou_msg_1
   117 000000DF [7B01000000000000] 
   118 000000E7 E8(00000000)            call printf
   119                                  
   120                                  ; =============== Print thankyou_msg_2 ==================
   121 000000EC B800000000              mov rax, 0
   122 000000F1 48BF-                   mov rdi, stringform
   122 000000F3 [8D02000000000000] 
   123 000000FB 48BE-                   mov rsi, thankyou_msg_2
   123 000000FD [9501000000000000] 
   124 00000105 E8(00000000)            call printf
   125                                  
   126                                  ; =============== Print congrats_msg_1 ==================
   127 0000010A B800000000              mov rax, 0
   128 0000010F 48BF-                   mov rdi, stringform
   128 00000111 [8D02000000000000] 
   129 00000119 48BE-                   mov rsi, congrats_msg_1
   129 0000011B [EE01000000000000] 
   130 00000123 E8(00000000)            call printf
   131                                  
   132                                  ; =============== Print congrats_msg_2 ==================
   133 00000128 B800000000              mov rax, 0
   134 0000012D 48BF-                   mov rdi, stringform
   134 0000012F [8D02000000000000] 
   135 00000137 48BE-                   mov rsi, congrats_msg_2
   135 00000139 [3E02000000000000] 
   136 00000141 E8(00000000)            call printf
   137                                  
   138                                  ; =============== Restore GPRs ==========================
   139 00000146 9D                      popf
   140 00000147 415F                    pop r15
   141 00000149 415E                    pop r14
   142 0000014B 415D                    pop r13
   143 0000014D 415C                    pop r12
   144 0000014F 415B                    pop r11
   145 00000151 415A                    pop r10
   146 00000153 4159                    pop r9
   147 00000155 4158                    pop r8
   148 00000157 5F                      pop rdi
   149 00000158 5E                      pop rsi
   150 00000159 5A                      pop rdx
   151 0000015A 59                      pop rcx
   152 0000015B 5B                      pop rbx
   153 0000015C 5D                      pop rbp
