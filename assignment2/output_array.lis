     1                                  ; Author: Kelsey Dang
     2                                  ; Email: kdangdo2002@csu.fullerton.edu
     3                                  ; Due Date: 10/25/23
     4                                  ; Subject: CPSC 240-03 Assignment 2 Arrays
     5                                  ; Filename: output_array.asm
     6                                  
     7                                  global output_array
     8                                  extern printf
     9                                  
    10                                  segment .data
    11 00000000 6F75747075745F6172-     print_data db "output_array: %16.10lf", 10, 0
    11 00000009 7261793A202531362E-
    11 00000012 31306C660A00       
    12                                  
    13 00000018 256C6600                floatform db "%lf", 0
    14 0000001C 257300                  stringform db "%s", 0
    15                                  
    16                                  segment .bss
    17                                  align 64
    18 00000000 <res 00000340>          backuparea resb 832
    19                                  
    20                                  segment .text
    21                                  output_array:
    22                                  
    23                                  ; ============= Backup GPRs ============================
    24 00000000 55                      push rbp
    25 00000001 4889E5                  mov rbp, rsp
    26 00000004 53                      push rbx
    27 00000005 51                      push rcx
    28 00000006 52                      push rdx
    29 00000007 56                      push rsi
    30 00000008 57                      push rdi
    31 00000009 4150                    push r8
    32 0000000B 4151                    push r9
    33 0000000D 4152                    push r10
    34 0000000F 4153                    push r11
    35 00000011 4154                    push r12
    36 00000013 4155                    push r13
    37 00000015 4156                    push r14
    38 00000017 4157                    push r15
    39 00000019 9C                      pushf
    40                                  
    41                                  ; =============== xsave =================================
    42                                  ; mov rax, 7
    43                                  ; mov rdx, 0
    44                                  ; xsave [backuparea]
    45                                  
    46                                  ; =============== Backup r14 and r15 ====================
    47 0000001A 4989FE                  mov r14, rdi          ; r14 is the array
    48 0000001D 4989F7                  mov r15, rsi          ; r15 is the number of cells
    49                                  
    50                                  ; =============== Display the array =====================
    51 00000020 4D31ED                  xor r13, r13          ; r13 is the starting index 0
    52                                  
    53                                  beginloop:
    54 00000023 4D39FD                  cmp r13, r15          ; if current index is >= number of cells (r15)
    55 00000026 741F                    je endloop            ; end the loop
    56                                  
    57                                  ; =============== Print data in array ===================
    58 00000028 F2430F1004EE            movsd xmm0, [r14+8*r13]
    59 0000002E B801000000              mov rax, 1
    60 00000033 48BF-                   mov rdi, print_data
    60 00000035 [0000000000000000] 
    61 0000003D E8(00000000)            call printf
    62                                  
    63 00000042 49FFC5                  inc r13
    64 00000045 EBDC                    jmp beginloop
    65                                  
    66                                  endloop:
    67 00000047 4C89E8                  mov rax, r13
    68                                  
    69                                  ; =============== xrstor ================================
    70                                  ; mov rax, 7
    71                                  ; mov rdx, 0
    72                                  ; xrstor [backuparea]
    73                                  
    74                                  ; =============== Restore GPRs ==========================
    75 0000004A 9D                      popf
    76 0000004B 415F                    pop r15
    77 0000004D 415E                    pop r14
    78 0000004F 415D                    pop r13
    79 00000051 415C                    pop r12
    80 00000053 415B                    pop r11
    81 00000055 415A                    pop r10
    82 00000057 4159                    pop r9
    83 00000059 4158                    pop r8
    84 0000005B 5F                      pop rdi
    85 0000005C 5E                      pop rsi
    86 0000005D 5A                      pop rdx
    87 0000005E 59                      pop rcx
    88 0000005F 5B                      pop rbx
    89 00000060 5D                      pop rbp
    90                                  
    91 00000061 C3                      ret
